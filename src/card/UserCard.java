/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package card;

import component.GenericAddFrame;
import component.GenericQueryFrame;
import form.Form;
import form.UserForm;
import java.util.Optional;
import javax.swing.JFrame;
import record.UserRecord;
import util.EntityHeaderData;

/**
 *
 * @author Edgar
 */
public class UserCard extends Card<UserRecord> {

    /**
     * Creates new form UserCard
     */
    public UserCard(Optional<UserRecord> record) {
        super(record);
    }
    
    public UserCard() {
        this(Optional.empty());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        typeLabel = new javax.swing.JLabel();
        cardHeader = new component.CardHeader();

        setBackground(util.ProjectColor.WHITE.getColor());
        setLayout(new java.awt.GridBagLayout());

        typeLabel.setFont(new java.awt.Font("Open Sans Light", 0, 12)); // NOI18N
        typeLabel.setForeground(util.ProjectColor.BLACK.getColor());
        typeLabel.setText("Tipo");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(typeLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        add(cardHeader, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void updateInterfaceForCurrentRecord() {
        if (currentRecord.isPresent()) {
            cardHeader.getNameLabel().setText(currentRecord.get().getNombre());
            cardHeader.getIdLabel().setText("#" + String.valueOf(currentRecord.get().getId()));
            typeLabel.setText(currentRecord.get().getTipo().getValue().getPrettyName());
        }
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private component.CardHeader cardHeader;
    private javax.swing.JLabel typeLabel;
    // End of variables declaration//GEN-END:variables

    @Override
    public EntityHeaderData getEntityHeaderData() {
        return EntityHeaderData.USER;
    }

    @Override
    public void initializeComponents() {
        initComponents();
    }

    @Override
    public Form getForm(Optional<UserRecord> currentRecord) {
        return new UserForm(currentRecord);
    }
}
