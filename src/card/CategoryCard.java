/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package card;

import component.GenericAddFrame;
import java.util.Optional;
import record.CategoryRecord;
import util.TextFormatting;
import util.functional.DatabaseErrorProneFunction;

/**
 *
 * @author Edgar
 */
public class CategoryCard extends Card<CategoryRecord> {

    public CategoryCard() {
        super();
    }

    public CategoryCard(Optional<CategoryRecord> currentRecord, DatabaseErrorProneFunction<Optional<CategoryRecord>, GenericAddFrame> addFrameFunction) {
        super(currentRecord, addFrameFunction);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        cardHeader = new component.CardHeader();
        itemsCountLabel = new typography.TypographyLabelRegular();

        setBackground(util.ProjectColor.WHITE.getColor());
        setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        add(cardHeader, gridBagConstraints);

        itemsCountLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/12-functions.png"))); // NOI18N
        itemsCountLabel.setText("typographyLabelRegular1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(itemsCountLabel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private component.CardHeader cardHeader;
    private typography.TypographyLabelRegular itemsCountLabel;
    // End of variables declaration//GEN-END:variables

    @Override
    public void initializeComponents() {
        initComponents();
    }

    @Override
    public void updateInterfaceForCurrentRecord() {
        CategoryRecord record = currentRecord.get();
        cardHeader.setData(record.getNombre(), record.getId());
        itemsCountLabel.setText(TextFormatting.formatUnits(record.getNumeroDeProductos(), "producto", "productos"));
    }
}
