/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package card;

import form.Form;
import form.SupplierForm;
import java.util.Optional;
import record.SupplierRecord;
import util.EntityHeaderData;

/**
 *
 * @author Edgar
 */
public class SupplierCard extends Card<SupplierRecord> {
    
    public SupplierCard(Optional<SupplierRecord> currentRecord) {
        super(currentRecord);
    }
    
    /**
     * Creates new form SupplierCard
     */
    public SupplierCard() {
        this(Optional.empty());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        cardHeader = new component.CardHeader();
        addressLabel = new component.StylizedLabel();
        rfcLabel = new component.StylizedLabel();
        telephoneNumberLabel = new component.StylizedLabel();
        cellphoneLabel = new component.StylizedLabel();

        setBackground(util.ProjectColors.WHITE.getColor());
        setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        add(cardHeader, gridBagConstraints);

        addressLabel.setText("stylizedLabel1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(addressLabel, gridBagConstraints);

        rfcLabel.setText("stylizedLabel1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(rfcLabel, gridBagConstraints);

        telephoneNumberLabel.setText("stylizedLabel1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(telephoneNumberLabel, gridBagConstraints);

        cellphoneLabel.setText("stylizedLabel1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(cellphoneLabel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void updateInterfaceForCurrentRecord() {
        if (currentRecord.isPresent()) {
            cardHeader.setData(currentRecord.get().getNombre(), currentRecord.get().getId());
            addressLabel.setText(currentRecord.get().getDireccion());
            rfcLabel.setText(currentRecord.get().getRfc());
            telephoneNumberLabel.setText(currentRecord.get().getTelefono());
            cellphoneLabel.setText(currentRecord.get().getCelular());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private component.StylizedLabel addressLabel;
    private component.CardHeader cardHeader;
    private component.StylizedLabel cellphoneLabel;
    private component.StylizedLabel rfcLabel;
    private component.StylizedLabel telephoneNumberLabel;
    // End of variables declaration//GEN-END:variables

    @Override
    public EntityHeaderData getEntityHeaderData() {
        return EntityHeaderData.SUPPLIER;
    }

    @Override
    public void initializeComponents() {
        initComponents();
    }

    @Override
    public Form getForm(Optional<SupplierRecord> currentRecord) {
        return new SupplierForm(currentRecord);
    }
}
